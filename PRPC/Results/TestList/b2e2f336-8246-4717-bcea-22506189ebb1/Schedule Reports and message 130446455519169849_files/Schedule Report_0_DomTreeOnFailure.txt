<html lang="en-IN" class="ie ie9"><head>  <title>Perform Schedule Reporting Task</title>   <script language="javascript">var uwtClientStart = new Date().getTime();</script>                      <link rel="stylesheet" type="text/css" href="webwb/pzjquery-ui_11685594314.css!pega_yui_styles_min_13084519564!!.css"> <!-- Style for runtime editing -->    <link rel="stylesheet" type="text/css" href="webwb/pzruntime_editor_style_11676609097!!.css">      <link rel="stylesheet" type="text/css" href="webwb/reports_core_11784546932.css!!.css">        <link rel="stylesheet" type="text/css" href="webwb/pzskinv2_pzdesignerstudio_5a574289ce5bb1bc199769f7c9209360b07f774619beb6947ae9f3216cf7d130_0_11006921117.css!!.css">    <link rel="stylesheet" type="text/css" href="webwb/pzskinv2_pzdesignerstudio_5a574289ce5bb1bc199769f7c9209360b07f774619beb6947ae9f3216cf7d130_1_187767929.css!!.css">    <link rel="stylesheet" type="text/css" href="webwb/pzskinv2_pzdesignerstudio_5a574289ce5bb1bc199769f7c9209360b07f774619beb6947ae9f3216cf7d130_2_13337562857.css!!.css">    <link rel="stylesheet" type="text/css" href="webwb/pzskinv2_pzdesignerstudio_5a574289ce5bb1bc199769f7c9209360b07f774619beb6947ae9f3216cf7d130_3_13255966304.css!!.css">           <script>  if (!pega) var pega = {}; if (!pega.desktop) { pega.desktop = {}; pega.d = pega.desktop; } pega.desktop.loadTime = new Date().getTime(); pega.d.csrfToken = "" ; pega.d.pyUID = "SAE1Architect"; pega.d.pxReqURI = "/prweb/PRServlet/rP_YUoU5v4VpHC7zgKdtRfYWDHA1OZuBMT3A8rk8PgI%5B*/!TABTHREAD0"; pega.d.pxHelpURI = "http://localhost:8080/prhelp"; pega.d.pxPdnURI = "http://pdn.pega.com/node/44156"; var requestHomeURI = "http://localhost:7001/prweb/PRServlet/rP_YUoU5v4VpHC7zgKdtRfYWDHA1OZuBMT3A8rk8PgI%5B*"; pega.d.currAG ="HRServices:Administrators";     pega.d.isPortlet = false;   pega.d.desktopType = "User"; pega.d.desktopSubType = "Composite"; pega.d.pzUnitTestPKey = "Developer";    var bEncryptURLs = false;    pega.desktop.isSpaceHarness = ""; pega.desktop.availableSpaces = new Array();  pega.desktop.availableSpaces.push('NewPortal');  pega.d.productionLevel = "2"; pega.d.activeSpaceName = "";  </script>                 <script type="text/javascript" src="webwb/pega_desktop_domainsuffix_1819019784.js!clientlogbase_11632504602.js!pega_yui_13792638971!desktopwrapper_13371440755!developerwrapperapi_12187829019.js!!.js"></script>            <script type="text/javascript" src="pzpega_ui_jquery_1799212622!!.js"></script>   <script type="text/javascript" src="pega_ui_harness_13772127907!!.js"></script>       <script type="text/javascript" src="pega_ui_harness_deferred_14014428671!!.js"></script><style type="text/css"></style>       <script type="text/javascript" src="webwb/pzpega_ui_inspection_12954630003!pzpega_ui_backbone_1847316086!pzpega_ui_designer_tree_12229130398.js!!.js"></script>                 <script type="text/javascript" src="webwb/pega_ui_textarea_14146791855.js!!.js"></script>     <script language="javascript"> var bClientValidation = 'true'; var bExpressionCalculation= ''; </script>      <script>function configure_rule_obj_validate(){rule_obj_validate('$Pworkpage$ppyLabel','','true','');}</script> <script> var form_submitCantProceed = "Please correct flagged fields before submitting the form!";  var date_patterns= ["EEEE d MMMM yyyy","yyyyMMdd","d MMMM yyyy","yyyy-MM-dd","d MMMM yyyy","dd-MMM-yy","dd/MM/yy","dd/MM/yy","dd/MM/yyyy","yyyy/M/d"];var datetime_patterns= ["EEEE d MMMM yyyy","yyyyMMdd","d MMMM yyyy","yyyy-MM-dd","d MMMM yyyy","dd-MMM-yy","dd/MM/yy","dd/MM/yy","dd/MM/yyyy","dd-MMM-yy h:mm:ss a","yyyyMMddTHHmmss.SSS z","yyyyMMddTHHmmss.SSS","yyyy-MM-ddTHH:mm:ss","yyyy-MM-ddTHH:mm:ss.SSSZ","EEEE d MMMM yyyy h:mm:ss a z","dd-MMM-yy h:mm:ss a","dd/MM/yy h:mm a","dd/MM/yy h:mm a","dd/MM/yyyy h:mm a","d MMMM yyyy h:mm:ss a z"];var time_patterns= ["h:mm:ss a","h:mm:ss a","HH:mm:ss","HH:mm:ss.SSSZ","HHmmss","h:mm:ss a z","h:mm:ss a z","h:mm:ss a","h:mm a"];var decimal_separator = ".";var grouping_separator = ",";var time_patterns_default = ["HH:mm", "h:mm", "HHmm"];time_patterns = time_patterns.concat(time_patterns_default);var amPmStrings =["AM","PM"];var months =["January","February","March","April","May","June","July","August","September","October","November","December"];var weekdays =["","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];var shortWeekdays =["","Sun","Mon","Tue","Wed","Thu","Fri","Sat"]; var date_separator = "/"; var date_datePos = 2; var date_monthPos = 1; var date_yearPos = 3;  var date_dateMsgStr = "is not a valid date value";  var time_timeMsgStr = "is not a valid time value"; var time_use24HourFormat = false;  var date_DateTimeMsgStr = "is not a valid date/time value";  var numeric_decimalMsgStr = "is not a valid decimal value";  var numeric_integerMsgStr = "is not a valid integer value";  var numeric_doubleMsgStr = "is not a valid double value";  var boolean_truefalseMsgStr = "is not a valid true/false value";  var required_requiredMsgStr = "Value cannot be blank";  var ruleEditValidate_isPosDecimalMsgStr = "Invalid input - reenter a decimal number greater than 0"; var ruleEditValidate_isNonNegativeMsgStr = "Enter a non-negative number"; var ruleEditValidate_isUrgencyValueMsgStr = "Invalid input - enter a number between 0 and 100"; var ruleEditValidate_isValidEmailAddressMsgStr = "Enter a valid email address"; var ruleEditValidate_isValidPhoneNumberMsgStr = "Enter a valid phone number"; var ruleEditValidate_isFutureDateMsgStr = "Enter a valid future date"; var ruleEditValidate_isNotFutureDateMsgStr = "Enter a valid past date"; var ruleEditValidate_isAlphabeticMsgStr = "Enter a valid alphabetic value"; var ruleEditValidate_isAlphaNumericMsgStr = "Enter a valid alphabetic or numeric value"; var ruleEditValidate_invalidFormatMsgStr = "The value entered is not matching with the format"; var ruleEditValidate_isAlphaNumericSpaceMsgStr = "Enter a valid Alphanumeric or space Value" ;  var length_minCharsMsg1 = "The field"; var length_minCharsMsg2 = "should be at least"; var length_minCharsMsg3= "characters long"; </script>                  <script type="text/javascript" src="webwb/pega_tools_xmldocument_1197443247.js!csvalid_12607657967.js!pega_validators_11589624033.js!input_formatter_11228896900.js!!.js"></script>        <script language="javascript"> pega.u.d.Locale = "en_IN"; /* Locale of the active requestor - HFIX-4964 */ pega.u.d.inStandardsMode = true;  pega.u.d.fieldValuesList = new Hashtable(); pega.u.d.fieldValuesList.put("Continue_work_Warning",'Continuing will replace your work in progress.'); pega.u.d.fieldValuesList.put("Wish_to_Continue",'Do you wish to continue?'); pega.u.d.fieldValuesList.put("ApplyFilter",'Apply'); pega.u.d.fieldValuesList.put("CancelFilter",'Cancel'); pega.u.d.fieldValuesList.put("enterToExpand",'press enter to expand row'); pega.u.d.fieldValuesList.put("enterToCollapse",'press enter to collapse row'); var gStrExpandAllText = 'Expand all'; var gStrCollapseAllText = 'Collapse All'; var gStrClickToExpandText = 'Click to expand '; var gStrClickToCollapseText = 'Click to collapse '; var gStrClickToCloseText = 'Click to close'; var NoModalInModal = 'Only one modal dialog can be opened at a time.'; var NotInAction= 'Local actions are available only when you are performing the assignment.'; var LocalNotInScreen='Local actions cannot be performed on a screen flow'; var FlowActionNotInAssignment='This flow action is not configured in the assignment'; var localCorrectErrors='Please correct current errors to perform this action.'; var bActionIframe = ''; var strHarnessMode = "ACTION"; var strSaveText = "Saving..."; var strSubmittingText="Submitting..."; var strHarnessPurpose = "Perform"; var busyIndText = "";  var strPageName = "workpage"; pega.u.d.subscriptError= "subscript is not valid or is already in use."; pega.u.d.expandCollapseText = "Click to expand/collapse"; pega.u.d.actionIFrameReadyState = false;  pega.u.d.workLabel= 'Schedule Reporting Task'; pega.u.d.isAccessible = false; pega.u.d.bClientValidforReviewAction = true; pega.u.d.bWarnBeforeChangingWindow = false; pega.u.d.bShowFramePopup = true; pega.u.d.fieldValuesList.put("CLICK_TO_LOAD_TEXT",'Click here to load'); /* BUG-84746 added localization for some field values */ pega.u.d.fieldValuesList.put("REPLACE_WORKITEM_WARNING",'You are about to replace an open work item which has changes that have not been saved.'); pega.u.d.fieldValuesList.put("PRESS_OK_TO_CONTINUE",'Press OK to continue and lose your changes.'); pega.u.d.fieldValuesList.put("PRESS_CANCEL_TO_RETURN",'Press Cancel to return to the modified form.'); /* BUG-84746 added localization for some field values */ var systemNodeID = "d729c83acd83f2819caebad9d2a31165"; var systemName = "pega"; var applicationName = "HRServices";  var strHarnessClass = "Pega-ScheduledTask-Reporting"; var strKey = "PEGA-SCHEDULEDTASK PX-ST-3"; var bReadOnly = "-1"; var strPrimaryPage = "workpage"; pega.u.d.formErrorType = "NONE"; pega.u.d.fieldErrorType = ""; pega.u.d.alwaysShowFormLevelErrors = "false"; pega.u.d.pyCustomError = "DisplayRFHarnessErrors"; pega.u.d.bExcludeLegacyJS= "true"; pega.u.d.portalID = ""; pega.u.d.portalName = "Developer"; pega.u.d.documentKey = ""; pega.u.d.documentTitle = ""; pega.u.d.documentTooltip = ""; pega.desktop.pyRequestorToken = '1'; pega.desktop.pxClientSession = 'HABA7E697F5D2E804CD727790D9E0D589'; var topWin = pega.desktop.support.getDesktopWindow() ; if(window == topWin && window.localStorage){ localStorage.setItem("pyRequestorToken"+pega.desktop.pxClientSession,pega.desktop.pyRequestorToken); localStorage.setItem("pyRequestorToken",pega.desktop.pyRequestorToken); } try{ /*BUG-128246 : Checking if DC is Present*/ var workarea = topWin.document.getElementById("workarea"); if(topWin && topWin.pega.u.d.harnessType && topWin.pega.u.d.harnessType == "layout" && workarea != null){ pega.u.d.stretchHarness = true; } }catch(e){ } pega.u.d.url = '/prweb/PRServlet/rP_YUoU5v4VpHC7zgKdtRfYWDHA1OZuBMT3A8rk8PgI%5B*/!TABTHREAD0?&pzTransactionId=f289a86df4d202ac842ffb85f38daa8a&pzFromFrame=workpage&pzPrimaryPageName=workpage'; pega.u.d.primaryPageName ='workpage'; pega.u.d.keepFixedVisible = "true"; pega.u.d.harnessType = ''; pega.u.d.topHarness = ''; if(pega.u.d.harnessType && pega.u.d.harnessType == 'layout'){ pega.u.d.fieldValuesList.put("EXPAND_COLLAPSE_MESSAGE",'Click to expand/collapse'); } if(pega.u.d.keepFixedVisible == "") pega.u.d.keepFixedVisible = true;  pega.u.d.AccordionAnimSpeed = 1;   var strPyID="PX-ST-3"; var strPyLabel="Schedule Reporting Task";    var strPropertyName= "";    var indexInList =0;     var strDisplayHarnessParms="&FinishingActivity=DisplayHarness "+ "&Purpose="+ "&AssignInsKey =ASSIGN-WORKLIST PEGA-SCHEDULEDTASK PX-ST-3!PYTASKSCHEDULER"+ "&AssignTaskName=ASSIGNMENT80"+ "&AssignOperator= SAE1Architect";    function getNextWorkItem(event) { event = (event == undefined)?window.event : event; var userID = "SAE1Architect"; var safeURL = new SafeURL(); safeURL.put("pyActivity", "GetNextWork"); safeURL.put("UserIdentifier", userID); doFormSubmit(safeURL,null,null,event); }  pega.util.Event.addListener(window,"beforeunload",pega.u.d.harnessOnBeforeUnload);    pega.u.d.attachOnload(pega.u.d.harnessOnLoad);  pega.util.Event.addListener(window,"unload",pega.u.d.harnessOnUnload,pega.u.d, true);       pega.u.d.processHarnessType = "Perform";      var confirm_harness_loaded = false;   </script>    

	

  <script language="javascript"> pega.u.d.url = ' /prweb/PRServlet/rP_YUoU5v4VpHC7zgKdtRfYWDHA1OZuBMT3A8rk8PgI%5B*/!TABTHREAD0?&pzTransactionId=f289a86df4d202ac842ffb85f38daa8a&pzFromFrame=workpage&pzPrimaryPageName=workpage'; </script>    </head><body onload="checkContainersExpanded();" onresize="doHarnessResize()" class="harnessBody"><div style="display: none;" id="FormErrorMarker_Div"> </div><input id="pzHarnessID" value="HID1400137869776" type="hidden"> <script> pega.u.d.pyStreamNameForGadget = "Perform"; </script>  <div id="PEGA_HARNESS" node_name="Perform" insHandle="RULE-HTML-HARNESS PEGA-SCHEDULEDTASK-REPORTING PERFORM #20130919T010738.257 GMT" classname="Pega-ScheduledTask-Reporting" objclass="Rule-HTML-Harness" node_type="MAIN_RULE" version="1" data-ui-meta="{'type':'Harness','ruleName':'Perform','insKey':'RULE-HTML-HARNESS PEGA-SCHEDULEDTASK-REPORTING PERFORM #20130919T010738.257 GMT'}"> <div style="display: none;" id="HEADER_BUTTON_HTML">   <button class="iconHistory" onmouseover="this.className='iconHistory_on'" title="View history" onkeypress="event.cancelBubble=true;" onmouseout="this.className='iconHistory'" onclick="setUserStart('HISTORY');openUrlInWindow(pxReqURI +'?pyActivity=HistoryAndAttachments&amp;HistoryOrAttach=History&amp;CustomFrameName=historyFrame&amp;pzPrimaryPageName=workpage&amp;PageName=workpage','HistoryAndAttachments','','',event)" type="button" isIcon="true" alt="View history"></button>&nbsp;   <button class="iconAttachment" onmouseover="this.className='iconAttachment_on'" title="View or edit attachments" onkeypress="event.cancelBubble=true;" onmouseout="this.className='iconAttachment'" onclick="setUserStart('ATTACHMENTS');openUrlInWindow(pxReqURI +'?pyActivity=HistoryAndAttachments&amp;HistoryOrAttach=Attach&amp;CustomFrameName=historyFrame&amp;pzPrimaryPageName=workpage&amp;PageName=workpage','HistoryAndAttachments','','',event)" type="button" isIcon="true" alt="View or edit attachments"></button>&nbsp;  <button style="display: none;" id="expandIcon" class="iconExpandAll" onmouseover="this.className+='_on'" title="Expand all" onkeypress="event.cancelBubble=true;" onmouseout="this.className=this.getAttribute('buttonClass')" onclick="setUserStart('EXPANDCOLLAPSE');toggleExpandCollapse(event)" type="button" isIcon="true" alt="Expand all" isExpanded="false" buttonClass="iconExpandAll"></button>&nbsp; <button class="iconClose" onmouseover="this.className='iconClose_on'" title="Close this item" onkeypress="event.cancelBubble=true;" onmouseout="this.className='iconClose'" onclick="setUserStart('CANCEL');doClose(event)" type="button" isIcon="true" alt="Close this item"></button>&nbsp;  </div>  <form method="post" name="main" action="/prweb/PRServlet/rP_YUoU5v4VpHC7zgKdtRfYWDHA1OZuBMT3A8rk8PgI%5B*/!TABTHREAD0?pyActivity=Show-Harness&amp;pzFromFrame=workpage&amp;pzPrimaryPageName=workpage&amp;pzTransactionId=f289a86df4d202ac842ffb85f38daa8a" autocomplete="off"> <input name="Purpose" value="Perform" type="hidden"> <input name="ReadOnly" value="-1" type="hidden"> <input id="pyCustomErrorSection" value="DisplayRFHarnessErrors" type="hidden">  <input id="ReadOnly" name="ReadOnly" value="-1" type="hidden"> <input id="HarnessPurpose" name="HarnessPurpose" value="Perform" type="hidden"> <input name="FolderKey" value="" type="hidden">    <input name="InputEnabled" value="false" type="hidden">  <div id="modalOverlay" class="modal-overlay"><div class="modal-align-table"><div class="modal-align-cell"><div id="modalWrapper" class="modal-wrapper"><div id="modalContent" class="modal-content"></div></div></div></div></div> <div style="display: none;" id="dirty-confirm-div"> <div id="RULE_KEY" class="sectionDivStyle" node_name="pyDirtyCheckConfirm" objclass="Rule-HTML-Section" node_type="MAIN_RULE" version="1" data-ui-meta="{'type':'Section','ruleName':'pyDirtyCheckConfirm','insKey':'RULE-HTML-SECTION WORK- PYDIRTYCHECKCONFIRM #20130919T072655.812 GMT'}" uniqueID="SID1400137869946" expandRL="" BASE_REF="" NAME="BASE_REF" readonly="true" pyclassname="Work-"><table id="EXPAND-OUTERFRAME" class="customTableBoxStyle" cellSpacing="0" cellPadding="0" data-ui-meta="{'type':'Layout','subType':'FREEFORM','pgRef':'.pySections(1)'}" PARAM_NAME="EXPANDEDSubSectionpyDirtyCheckConfirmB"><tbody><tr><td><div id="modaldialog_hd_dirty" class="hd">
	<span>Confirm close</span>
	<button id="container_close" class="container-close" onclick="doModalAction('', event);" type="button"></button>
</div><div class="customExpandInnerDivStyle" section_index="1"><table cellSpacing="0" cellPadding="0">
							<tbody><tr><td style="width: 594px; height: 49px; text-align: center;" class="dataLabelRead" data-ui-meta="{'type':'Cell','subType':'SUB_SECTION','clipboardPath':'pyDirtyModalCon','className':'Pega-ScheduledTask-Reporting','pgRef':'.pySections(1).pySectionBody(1).pyTable.pyRows(1).pyCells(1)'}"><div id="modaldialog_con_dirty" class="modaldialog_con_dirty"> You are about to replace an open work item which has changes that has not been saved! </div></td>
							</tr>
							</tbody></table><input id="EXPAND-INDICATOR" name="EXPANDEDSubSectionpyDirtyCheckConfirmB" value="" type="hidden"></div></td></tr></tbody></table><table cellSpacing="0" cellPadding="0" width="100%" data-ui-meta="{'type':'Layout','subType':'FREEFORM','pgRef':'.pySections(2)'}" section_index="2">
							<tbody><tr><td style="width: 40%; text-align: right; padding-right: 5px; vertical-align: top;" class="dataValueRead" data-ui-meta="{'type':'Cell','subType':'pxButton','className':'Pega-ScheduledTask-Reporting','pgRef':'.pySections(2).pySectionBody(1).pyTable.pyRows(1).pyCells(1)'}"><nobr><span><button class="pzhc" type="button" data-click='[["setUserStart",["SAVE"]],["doSave",[true,":event",true]]]' data-ctl=""><div class="pzbtn-rnd"><div class="pzbtn-lft" data-click=".."><div class="pzbtn-rgt" data-click="..."><div class="pzbtn-mid" data-click="...."><img class="pzbtn-i" alt="" src="webwb/zblankimage.gif">Save<img class="pzbtn-i" alt="" src="webwb/zblankimage.gif"></div></div></div></div></button></span></nobr></td><td style="width: 20%; text-align: center; vertical-align: top;" class="dataValueRead" data-ui-meta="{'type':'Cell','subType':'pxButton','className':'Pega-ScheduledTask-Reporting','pgRef':'.pySections(2).pySectionBody(1).pyTable.pyRows(1).pyCells(2)'}"><nobr><span><button class="pzhc" type="button" data-click='[["setUserStart",["CANCEL"]],["doClose",[":event", null, null, true]]]' data-ctl=""><div class="pzbtn-rnd"><div class="pzbtn-lft" data-click=".."><div class="pzbtn-rgt" data-click="..."><div class="pzbtn-mid" data-click="...."><img class="pzbtn-i" alt="" src="webwb/zblankimage.gif">Discard<img class="pzbtn-i" alt="" src="webwb/zblankimage.gif"></div></div></div></div></button></span></nobr></td><td style="width: 40%; text-align: left; padding-left: 5px; vertical-align: top;" class="dataValueRead" data-ui-meta="{'type':'Cell','subType':'pxButton','className':'Pega-ScheduledTask-Reporting','pgRef':'.pySections(2).pySectionBody(1).pyTable.pyRows(1).pyCells(3)'}"><nobr><span><button class="pzhc" type="button" data-click='[["closeContainer", [":event"]]]' data-ctl=""><div class="pzbtn-rnd"><div class="pzbtn-lft" data-click=".."><div class="pzbtn-rgt" data-click="..."><div class="pzbtn-mid" data-click="...."><img class="pzbtn-i" alt="" src="webwb/zblankimage.gif">Cancel<img class="pzbtn-i" alt="" src="webwb/zblankimage.gif"></div></div></div></div></button></span></nobr></td>
							</tr>
							</tbody></table></div> </div>  <input id="pySpecialtyComponentData" name="$Pworkpage$ppySpecialtyComponentData" value="" type="hidden">  <div id="HARNESS_CONTENT" class="harnessContent">   <div data-ui-meta="{'type':'Container'}">  <table class="containerBody" cellSpacing="0" cellPadding="0" width="100%"> <tbody><tr> <td>  <div class="harnessBodyNoHead">                  <input id="HarnessMode" value="ACTION" type="hidden">   <input name="ActionMode" value="" type="hidden"> <input name="NewAction" value="false" type="hidden">          <input name="TaskIndex" value="1" type="hidden"> <input name="TaskHTML" value="" type="hidden"> <input name="TaskSectionReference" value="pyScheduleCreate" type="hidden"> <input name="TaskStreamType" value="Rule-Obj-FlowAction" type="hidden"> <input name="TaskStatus" value="pyScheduleTaskInfo" type="hidden"> <input name="TaskInstructions" value="" type="hidden"> <input name="TaskHelpPresent" value="false" type="hidden"> <input name="TaskHelpType" value="" type="hidden"> <input name="TaskInstructionsCaption" value="Instructions" type="hidden"> <table cellSpacing="0" cellPadding="0" width="100%"><tbody><tr><td> <div id="pyFlowActionHTML" class="alignLeft" BASE_REF="" NAME="BASE_REF"> <!-- When the Stream type is blank show Rule-Obj-HTML -->    <!-- include the flowaction HTML-->   <!-- If the flow action is a case/stage-wide action, keep the context as the work page and show the stream -->  <!-- When there is no interest page, just show the stream -->        <span data-ui-meta="{'type':'FlowAction','ruleName':'pyScheduleTaskInfo','insKey':'RULE-OBJ-FLOWACTION PEGA-SCHEDULEDTASK PYSCHEDULETASKINFO #20130919T005219.806 GMT'}"> <div id="RULE_KEY" class="sectionDivStyle" node_name="pyScheduleCreate" objclass="Rule-HTML-Section" node_type="MAIN_RULE" version="1" data-ui-meta="{'type':'Section','ruleName':'pyScheduleCreate','insKey':'RULE-HTML-SECTION PEGA-SCHEDULEDTASK-REPORTING PYSCHEDULECREATE #20130919T010813.596 GMT'}" uniqueID="SID1400137870170" expandRL="" BASE_REF="" NAME="BASE_REF" pyclassname="Pega-ScheduledTask-Reporting"> <table id="EXPAND-OUTERFRAME" cellSpacing="0" cellPadding="0" width="100%" PARAM_NAME="EXPANDEDFlowActionpyScheduleCreateB"> <tbody><tr> <td> <table cellSpacing="0" cellPadding="0" width="100%"> <tbody><tr> <td class="dataActionTitle" colSpan="2" noWrap="nowrap">Task Definition</td> </tr> <tr> <td class="dataActionContent"><div class="noHeadExpandInnerDivStyle" section_index="1"><div id="RULE_KEY" class="sectionDivStyle" node_name="pyTaskDefintion" objclass="Rule-HTML-Section" node_type="MAIN_RULE" version="1" data-ui-meta="{'type':'Section','ruleName':'pyTaskDefintion','insKey':'RULE-HTML-SECTION EMBED-SCHEDULEDTASK-DEFINITION-REPORTING PYTASKDEFINTION #20130919T010812.510 GMT'}" uniqueID="SID1400137870171" expandRL="" BASE_REF=".pyTaskDefinition" NAME="BASE_REF" pyclassname="Embed-ScheduledTask-Definition-Reporting"><table cellSpacing="0" cellPadding="0" section_index="1">
							<tbody><tr><td style="width: 98px; height: 21px;" class="dataLabelWrite" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(1).pySectionBody(1).pyTable.pyRows(1).pyCells(1)'}"><nobr><label>Task Name</label></nobr></td><td style="width: 295px; height: 21px;" class="dataValueWrite" colSpan="3" data-ui-meta="{'type':'Cell','subType':'pxTextInput','clipboardPath':'.pyTaskName','className':'Embed-ScheduledTask-Definition-Reporting','pgRef':'.pySections(1).pySectionBody(1).pyTable.pyRows(1).pyCells(2)'}"><nobr>
	
<script type="text/javascript" src="webwb/pzpega_control_textinput_14204479440.js!!.js"></script><span nowrap=""> <input style="width: 150px;" id="pyTaskName" class="leftJustifyStyle" title="Enter a name for Scheduled Task" name="$Pworkpage$ppyTaskDefinition$ppyTaskName" value="mycandidatereports29" type="text" data-ctl='["TextInput"]'></span></nobr></td>
							</tr>
							<tr><td style="width: 98px; height: 21px;" class="dataLabelWrite" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(1).pySectionBody(1).pyTable.pyRows(2).pyCells(1)'}"><nobr><label>Task Description</label></nobr></td><td style="width: 295px; height: 21px;" class="dataValueWrite" colSpan="3" data-ui-meta="{'type':'Cell','subType':'pxTextInput','clipboardPath':'.pyTaskDescription','className':'Embed-ScheduledTask-Definition-Reporting','pgRef':'.pySections(1).pySectionBody(1).pyTable.pyRows(2).pyCells(2)'}"><nobr><span nowrap=""> <input style="width: 300px;" id="pyTaskDescription" class="leftJustifyStyle" title="Enter a description for Scheduled Task" name="$Pworkpage$ppyTaskDefinition$ppyTaskDescription" maxLength="255" value="mycandidatereports29" type="text" data-ctl='["TextInput"]'></span></nobr></td>
							</tr>
							<tr><td style="width: 98px; height: 21px;" class="dataLabelWrite" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(1).pySectionBody(1).pyTable.pyRows(3).pyCells(1)'}"><nobr><label>Category Name</label></nobr></td><td style="width: 123px; height: 21px;" class="dataValueRead" data-ui-meta="{'type':'Cell','clipboardPath':'.pyCategoryDescription','className':'Embed-ScheduledTask-Definition-Reporting','pgRef':'.pySections(1).pySectionBody(1).pyTable.pyRows(3).pyCells(2)'}"><nobr><span>schedulerports28 (Public Reports)</span></nobr></td><td style="width: 87px; height: 21px;" class="dataLabelWrite" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(1).pySectionBody(1).pyTable.pyRows(3).pyCells(3)'}"><nobr><label>Shortcut Name</label></nobr></td><td style="width: 81px; height: 21px;" class="dataValueRead" data-ui-meta="{'type':'Cell','clipboardPath':'.pyShortcutName','className':'Embed-ScheduledTask-Definition-Reporting','pgRef':'.pySections(1).pySectionBody(1).pyTable.pyRows(3).pyCells(4)'}"><nobr><span>mycandidatereports29</span></nobr></td>
							</tr>
							<tr><td style="width: 98px; height: 22px;" class="dataLabelWrite" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(1).pySectionBody(1).pyTable.pyRows(4).pyCells(1)'}"><nobr><label>Report Class</label></nobr></td><td style="width: 123px; height: 22px;" class="dataValueRead" data-ui-meta="{'type':'Cell','clipboardPath':'.pyReportClass','className':'Embed-ScheduledTask-Definition-Reporting','pgRef':'.pySections(1).pySectionBody(1).pyTable.pyRows(4).pyCells(2)'}"><nobr><span>SAE-HRServices-Work</span></nobr></td><td style="width: 87px; height: 22px;" class="dataLabelWrite" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(1).pySectionBody(1).pyTable.pyRows(4).pyCells(3)'}"><nobr><label>Report Name</label></nobr></td><td style="width: 81px; height: 22px;" class="dataValueRead" data-ui-meta="{'type':'Cell','clipboardPath':'.pyReportName','className':'Embed-ScheduledTask-Definition-Reporting','pgRef':'.pySections(1).pySectionBody(1).pyTable.pyRows(4).pyCells(4)'}"><nobr><span>mycandidatereports29</span></nobr></td>
							</tr>
							<tr><td style="width: 98px; height: 22px;" class="dataLabelWrite" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(1).pySectionBody(1).pyTable.pyRows(5).pyCells(1)'}"><nobr><label></label></nobr></td><td style="width: 123px; height: 22px;" class="dataLabelRead" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(1).pySectionBody(1).pyTable.pyRows(5).pyCells(2)'}"><nobr><label></label></nobr></td><td style="width: 87px; height: 22px;" class="dataLabelForWrite" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(1).pySectionBody(1).pyTable.pyRows(5).pyCells(3)'}"><nobr><label for="pyTemplateInputBox"></label></nobr></td><td style="width: 81px; height: 22px;" class="dataValueRead" data-ui-meta="{'type':'Cell','subType':'pzRefreshRBCallback','className':'Embed-ScheduledTask-Definition-Reporting','pgRef':'.pySections(1).pySectionBody(1).pyTable.pyRows(5).pyCells(4)'}"><nobr><script> pega.util.Event.on(window, 'unload', function (event) { if(window.opener && window.opener.pega.u.d) { var displayReport = window.opener.pega.u.d.getSectionByName("pzRBShortcutsGrid7","",""); if(typeof displayReport == 'undefined' || displayReport == null){ /*6.3 version of RB*/ displayReport = window.opener.pega.u.d.getSectionByName("pzRBRightPanel","",""); if(displayReport != null || displayReport != undefined) { var actParams = "&pzPrimaryPageName=ReportBrowserShortcut&shortcutAction=UpdateShortcut"; window.opener.pega.u.d.reloadSection(displayReport, 'pzSetBrowserProperties', actParams, false, true, '-1', false); } }else{ /*7.1 version of report browser*/ window.opener.pega.u.d.reloadSection(displayReport,"pzRBForceDataPageRefresh", "", false, true, "", false); } }} ); </script></nobr></td>
							</tr>
							</tbody></table></div><input id="EXPAND-INDICATOR" name="EXPANDEDFlowActionpyScheduleCreateB" value="" type="hidden"></div> </td> </tr> </tbody></table> </td></tr></tbody></table> <table id="EXPAND-OUTERFRAME" cellSpacing="0" cellPadding="0" width="100%" PARAM_NAME="EXPANDEDFlowActionpyScheduleCreateBB"> <tbody><tr> <td> <table cellSpacing="0" cellPadding="0" width="100%"> <tbody><tr> <td class="dataActionTitle" colSpan="2" noWrap="nowrap">Task Scheduling</td> </tr> <tr> <td class="dataActionContent"><div class="noHeadExpandInnerDivStyle" section_index="2"> <div id="RULE_KEY" class="sectionDivStyle" node_name="pyTaskScheduling" objclass="Rule-HTML-Section" node_type="MAIN_RULE" version="1" data-ui-meta="{'type':'Section','ruleName':'pyTaskScheduling','insKey':'RULE-HTML-SECTION EMBED-SCHEDULEDTASK-SCHEDULING PYTASKSCHEDULING #20130919T094450.830 GMT'}" uniqueID="SID1400137870179" expandRL="" BASE_REF=".pyTaskScheduling" NAME="BASE_REF" pyclassname="Embed-ScheduledTask-Scheduling"><table cellSpacing="0" cellPadding="0" data-ui-meta="{'type':'Layout','subType':'FREEFORM','pgRef':'.pySections(1)'}" section_index="1">
							<tbody><tr><td style="width: 82px; height: 21px; font-weight: bold;" class="dataLabelForWrite" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(1).pySectionBody(1).pyTable.pyRows(1).pyCells(1)'}"><nobr><label for="pyTimeOfDay"><span class="iconRequired Standard_iconRequired">Time Of Day</span><strong class="required-field-accessibility">Required</strong></label></nobr></td><td style="width: 131px; height: 21px;" class="dataValueWrite" data-ui-meta="{'type':'Cell','subType':'PromptSelect','clipboardPath':'.pyTimeOfDay','className':'Embed-ScheduledTask-Scheduling','pgRef':'.pySections(1).pySectionBody(1).pyTable.pyRows(1).pyCells(2)'}"><nobr><div class="RequiredField"> <script> 

function itemChanged (tagName) {
	if ("function" != typeof (promptSelectItemChangedHandler)) {
    	return false;
    }
return promptSelectItemChangedHandler (tagName);
}
var handlers = { "click":"clickHandler", "focus" : "focusHandler", "blur" : "blurHandler", "tap":"clickHandler" };
function fireEventHandler(target, type) {
	var handler = handlers[type] || "handler";
	pega.util.Event.addListener(target,type,pega.control.eventController[handler]);
	pega.util.Event.fireEvent(target,type);
	pega.util.Event.removeListener(target,type,pega.control.eventController[handler]);
}
function onClickSelectButton(eventEle) {
    if (eventEle) {
      var selElem = eventEle.previousSibling;
      var hiddenElem = selElem.previousSibling;
      if(pega && pega.util && pega.util.Dom) {
        selElem = pega.util.Dom.getPreviousSibling(eventEle);
        hiddenElem = pega.util.Dom.getPreviousSibling(selElem);
      }
      var value = selElem.options[selElem.selectedIndex].value;
      if(hiddenElem.value != value) {
        hiddenElem.value = value;
        fireEventHandler(hiddenElem, "change");
      }
    }
}
</script> <span nowrap="">   <script>if(window.name && window.name.indexOf("yuiIO")==0) {  window.onerror=function() {return true; }} ;try { if(typeof(pega)!= "undefined" && typeof(pega.u)!="undefined" && typeof(pega.u.d)!= "undefined" ){
 pega.u.d.attachOnload ($Pworkpage$ppyTaskScheduling$ppyTimeOfDay_announce, true); 
} else {
pega.util.Event.addListener(window, "load", $Pworkpage$ppyTaskScheduling$ppyTimeOfDay_announce); 
}}catch(e){}
function $Pworkpage$ppyTaskScheduling$ppyTimeOfDay_announce(){itemChanged("$Pworkpage$ppyTaskScheduling$ppyTimeOfDay");}</script><select id="pyTimeOfDay" onchange="itemChanged('$Pworkpage$ppyTaskScheduling$ppyTimeOfDay')" title="" name="$Pworkpage$ppyTaskScheduling$ppyTimeOfDay" alt="" validationType="integer,required"><option value="1">01 AM</option><option value="2">02 AM</option><option value="3">03 AM</option><option value="4">04 AM</option><option value="5">05 AM</option><option value="6">06 AM</option><option value="7">07 AM</option><option value="8">08 AM</option><option selected="" value="9">09 AM</option><option value="10">10 AM</option><option value="11">11 AM</option><option value="12">12 PM</option><option value="13">01 PM</option><option value="14">02 PM</option><option value="15">03 PM</option><option value="16">04 PM</option><option value="17">05 PM</option><option value="18">06 PM</option><option value="19">07 PM</option><option value="20">08 PM</option><option value="21">09 PM</option><option value="22">10 PM</option><option value="23">11 PM</option><option value="24">12 AM</option></select></span> </div></nobr></td>
							</tr>
							<tr><td style="width: 215px; height: 26px; font-weight: bold;" class="dataValueWrite" colSpan="2" data-ui-meta="{'type':'Cell','subType':'RadioButtonsForSchedule','clipboardPath':'.pyFrequency','className':'Embed-ScheduledTask-Scheduling','pgRef':'.pySections(1).pySectionBody(1).pyTable.pyRows(2).pyCells(1)'}"><nobr><div class="RequiredField">



 







 














  







<table border="0"><tbody><tr><td><input style="vertical-align: middle;" id="$Pworkpage$ppyTaskScheduling$ppyFrequencyOne-Time only" class="Radio" onclick="handleClientEvent('SERVER', '','', '-1', event)" name="$Pworkpage$ppyTaskScheduling$ppyFrequency" value="O" CHECKED="" type="radio" validationType="required" PN=".pyFrequency"><label for="$Pworkpage$ppyTaskScheduling$ppyFrequencyOne-Time only">One-Time only</label></td><td><input style="vertical-align: middle;" id="$Pworkpage$ppyTaskScheduling$ppyFrequencyRecurring task" class="Radio" onclick="handleClientEvent('SERVER', '','', '-1', event)" name="$Pworkpage$ppyTaskScheduling$ppyFrequency" value="R" type="radio" validationType="required" PN=".pyFrequency"><label for="$Pworkpage$ppyTaskScheduling$ppyFrequencyRecurring task">Recurring task</label></td><td>&nbsp;</td></tr></tbody></table>






</div></nobr></td>
							</tr>
							</tbody></table><table cellSpacing="0" cellPadding="0" data-ui-meta="{'type':'Layout','subType':'FREEFORM','pgRef':'.pySections(2)'}" section_index="2">
							<tbody><tr><td style="width: 23px; height: 21px; color: black;" class="dataLabelWrite" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(2).pySectionBody(1).pyTable.pyRows(1).pyCells(1)'}"><nobr><label>On:</label></nobr></td><td style="width: 8px; height: 21px;" class="dataLabelWrite" data-ui-meta="{'type':'Cell','subType':'Image','clipboardPath':'images%2Frequiredstar.gif','pgRef':'.pySections(2).pySectionBody(1).pyTable.pyRows(1).pyCells(2)'}"><img title="" alt="" src="images/requiredstar.gif"></td><td style="width: 143px; height: 21px;" class="dataValueWrite" data-ui-meta="{'type':'Cell','subType':'pxDateTime','clipboardPath':'.pyOneTimeStartDate','className':'Embed-ScheduledTask-Scheduling','pgRef':'.pySections(2).pySectionBody(1).pyTable.pyRows(1).pyCells(3)'}"><nobr>
<ins style="display: none;" id="pega-calendar" data-calendar='{"img":"webwb/pzspacercal_12860256145.gif!!.gif","locale":[["0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59"],0,"dd/MM/yyyy","dd/MM/yyyy h:mm a","Today",["January","February","March","April","May","June","July","August","September","October","November","December"],["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],["AM","PM"],"Apply"]}'></ins>


<script>
var positionDatePickerIcn = function(control){
	/* BUG-47098 - Following block filters out IE8(both quirks and standards modes) and IE9 (standards mode) */
	var addMarginFlag = true;
	if(document.documentMode && navigator.userAgent.indexOf("Trident/4") > -1){ //IE8: skip for both standards and quirks mode
		addMarginFlag = false;
	} else if(document.documentMode && document.documentMode >= 9 && navigator.userAgent.indexOf("Trident/5") > -1){ //IE9: skip for standards mode
		addMarginFlag = false;
	}

	if (addMarginFlag) {
		var icnEle = control.lastChild;
		if(icnEle.tagName.toLowerCase() == 'img'){
			icnEle.style.marginTop = '0px';
		}
	}
};
</script><script type="text/javascript" src="pzDatePickerAdvanced_13336898777!!.js"></script><span style="width: inherit; display: inline-block;" id="$Pworkpage$ppyTaskScheduling$ppyOneTimeStartDateSpan" onmouseover="pega.c.DatePicker.dtTmHvr(event);" role="group" data-calendar='{"d":[0,0]}' aria-label=" Required"><input style="width: 11.62em; padding-right: 17px;" id="pyOneTimeStartDate" class="inactvDtTmTxt" name="$Pworkpage$ppyTaskScheduling$ppyOneTimeStartDate" value="14/05/2014" type="text" data-ctl='["DatePicker"]' validationType="date,required"><img style="cursor: pointer;" class="inactvIcon" src="webwb/pzspacer_11792674401.gif!!.gif" data-ctl='["DatePicker"]'><script>try{ positionDatePickerIcn(document.getElementById('$Pworkpage$ppyTaskScheduling$ppyOneTimeStartDateSpan')); }catch(e) {}</script></span></nobr></td>
							</tr>
							<tr><td style="width: 23px; height: 22px;" class="dataLabelWrite" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(2).pySectionBody(1).pyTable.pyRows(2).pyCells(1)'}"><nobr><label></label></nobr></td><td style="width: 8px; height: 22px;" class="dataLabelWrite" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(2).pySectionBody(1).pyTable.pyRows(2).pyCells(2)'}"><nobr><label></label></nobr></td><td style="width: 143px; height: 22px;" class="dataLabelWrite" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(2).pySectionBody(1).pyTable.pyRows(2).pyCells(3)'}"><nobr><label></label></nobr></td>
							</tr>
							</tbody></table> <table id="EXPAND-OUTERFRAME" cellSpacing="0" cellPadding="0" width="100%" PARAM_NAME="EXPANDEDFlowActionpyTaskSchedulingB"> <tbody><tr> <td> </td></tr></tbody></table><table cellSpacing="0" cellPadding="0" data-ui-meta="{'type':'Layout','subType':'FREEFORM','pgRef':'.pySections(5)'}" section_index="5">
							<tbody><tr><td style="width: 24px; height: 34px;" class="dataValueWrite" data-ui-meta="{'type':'Cell','subType':'CheckBox','clipboardPath':'.pyRetainOnFailure','className':'Embed-ScheduledTask-Scheduling','pgRef':'.pySections(5).pySectionBody(1).pyTable.pyRows(1).pyCells(1)'}"><nobr>







	




  




	
	
		<input name="$Pworkpage$ppyTaskScheduling$ppyRetainOnFailure" value="false" type="hidden">
		<input id="pyRetainOnFailure" class="checkbox" title="" onclick="handleClientEvent('SERVER', '','', '-1', event)" name="$Pworkpage$ppyTaskScheduling$ppyRetainOnFailure" value="true" type="checkbox" validationType="true-false" PN=".pyRetainOnFailure">
	

</nobr></td><td style="width: 101px; height: 34px; font-weight: bold;" class="dataLabelWrite" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(5).pySectionBody(1).pyTable.pyRows(1).pyCells(2)'}"><nobr><label>On error, retry</label></nobr></td><td style="border-color: transparent !important; width: 46px; height: 34px; font-weight: bold;" class="dataLabelWrite" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(5).pySectionBody(1).pyTable.pyRows(1).pyCells(3)'}"><div style="display: none;" id="CT" height="0px" SHOW_WHEN=".pyRetainOnFailure==true" SWP=".pyRetainOnFailure"><nobr><label>Every</label></nobr></div></td><td style="border-color: transparent !important; width: 8px; height: 34px;" class="dataLabelWrite" data-ui-meta="{'type':'Cell','subType':'Image','clipboardPath':'images%2Frequiredstar.gif','pgRef':'.pySections(5).pySectionBody(1).pyTable.pyRows(1).pyCells(4)'}"><div style="display: none;" id="CT" height="0px" SHOW_WHEN=".pyRetainOnFailure==true" SWP=".pyRetainOnFailure"><img title="" alt="" src="images/requiredstar.gif"></div></td><td style="border-color: transparent !important; width: 152px; height: 34px; font-weight: bold;" class="dataValueWrite" data-ui-meta="{'type':'Cell','subType':'pxInteger','clipboardPath':'.pyRetryEvery','className':'Embed-ScheduledTask-Scheduling','pgRef':'.pySections(5).pySectionBody(1).pyTable.pyRows(1).pyCells(5)'}"><div style="display: none;" id="CT" height="0px" SHOW_WHEN=".pyRetainOnFailure==true" SWP=".pyRetainOnFailure"><nobr><span nowrap=""> <input id="pyRetryEvery" class="rightJustifyStyle" name="$Pworkpage$ppyTaskScheduling$ppyRetryEvery" value="" type="number" data-ctl='["TextInput"]' validationType="integer" aria-label="Required in number format"></span></nobr></div></td><td style="border-color: transparent !important; width: 139px; height: 34px; font-weight: bold;" class="dataLabelRead" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(5).pySectionBody(1).pyTable.pyRows(1).pyCells(6)'}"><div style="display: none;" id="CT" height="0px" SHOW_WHEN=".pyRetainOnFailure==true" SWP=".pyRetainOnFailure"><nobr><label>minute(s). Stop after</label></nobr></div></td><td style="border-color: transparent !important; width: 8px; height: 34px;" class="dataLabelWrite" data-ui-meta="{'type':'Cell','subType':'Image','clipboardPath':'images%2Frequiredstar.gif','pgRef':'.pySections(5).pySectionBody(1).pyTable.pyRows(1).pyCells(7)'}"><div style="display: none;" id="CT" height="0px" SHOW_WHEN=".pyRetainOnFailure==true" SWP=".pyRetainOnFailure"><img title="" alt="" src="images/requiredstar.gif"></div></td><td style="border-color: transparent !important; width: 152px; height: 34px;" class="dataValueWrite" data-ui-meta="{'type':'Cell','subType':'pxInteger','clipboardPath':'.pyMaxAttempts','className':'Embed-ScheduledTask-Scheduling','pgRef':'.pySections(5).pySectionBody(1).pyTable.pyRows(1).pyCells(8)'}"><div style="display: none;" id="CT" height="0px" SHOW_WHEN=".pyRetainOnFailure==true" SWP=".pyRetainOnFailure"><nobr><span nowrap=""> <input id="pyMaxAttempts" class="rightJustifyStyle" name="$Pworkpage$ppyTaskScheduling$ppyMaxAttempts" value="1" type="number" data-ctl='["TextInput"]' validationType="integer" aria-label="Required in number format"></span></nobr></div></td><td style="border-color: transparent !important; width: 143px; height: 34px; font-weight: bold;" class="dataLabelRead" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(5).pySectionBody(1).pyTable.pyRows(1).pyCells(9)'}"><div style="display: none;" id="CT" height="0px" SHOW_WHEN=".pyRetainOnFailure==true" SWP=".pyRetainOnFailure"><nobr><label>unsuccessful retries.</label></nobr></div></td>
							</tr>
							<tr><td style="width: 24px; height: 22px;" class="dataLabelWrite" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(5).pySectionBody(1).pyTable.pyRows(2).pyCells(1)'}"><nobr><label></label></nobr></td><td style="width: 101px; height: 22px;" class="dataLabelWrite" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(5).pySectionBody(1).pyTable.pyRows(2).pyCells(2)'}"><nobr><label></label></nobr></td><td style="width: 46px; height: 22px;" class="dataLabelWrite" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(5).pySectionBody(1).pyTable.pyRows(2).pyCells(3)'}"><nobr><label></label></nobr></td><td style="width: 8px; height: 22px;" class="dataLabelWrite" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(5).pySectionBody(1).pyTable.pyRows(2).pyCells(4)'}"><nobr><label></label></nobr></td><td style="width: 152px; height: 22px;" class="dataLabelWrite" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(5).pySectionBody(1).pyTable.pyRows(2).pyCells(5)'}"><nobr><label></label></nobr></td><td style="width: 139px; height: 22px;" class="dataLabelWrite" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(5).pySectionBody(1).pyTable.pyRows(2).pyCells(6)'}"><nobr><label></label></nobr></td><td style="width: 8px; height: 22px;" class="dataLabelWrite" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(5).pySectionBody(1).pyTable.pyRows(2).pyCells(7)'}"><nobr><label></label></nobr></td><td style="width: 152px; height: 22px;" class="dataLabelRead" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(5).pySectionBody(1).pyTable.pyRows(2).pyCells(8)'}"><nobr><label></label></nobr></td><td style="width: 143px; height: 22px;" class="dataLabelRead" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(5).pySectionBody(1).pyTable.pyRows(2).pyCells(9)'}"><nobr><label></label></nobr></td>
							</tr>
							</tbody></table> </div>  <input id="EXPAND-INDICATOR" name="EXPANDEDFlowActionpyScheduleCreateBB" value="" type="hidden"></div> </td> </tr> </tbody></table> </td></tr></tbody></table> <table id="EXPAND-OUTERFRAME" cellSpacing="0" cellPadding="0" width="100%" PARAM_NAME="EXPANDEDFlowActionpyScheduleCreateBBB"> <tbody><tr> <td> <table cellSpacing="0" cellPadding="0" width="100%"> <tbody><tr> <td class="dataActionTitle" colSpan="2" noWrap="nowrap">Task Output Processing</td> </tr> <tr> <td class="dataActionContent"><div class="noHeadExpandInnerDivStyle" section_index="3"><div id="RULE_KEY" class="sectionDivStyle" node_name="pyTaskOutputProcessing" objclass="Rule-HTML-Section" node_type="MAIN_RULE" version="1" data-ui-meta="{'type':'Section','ruleName':'pyTaskOutputProcessing','insKey':'RULE-HTML-SECTION EMBED-SCHEDULEDTASK-OUTPUTPROCESSING-REPORTING PYTASKOUTPUTPROCESSING #20130919T010812.618 GMT'}" uniqueID="SID1400137870463" expandRL="" BASE_REF=".pyTaskOutputProcessing" NAME="BASE_REF" pyclassname="Embed-ScheduledTask-OutputProcessing-Reporting"><table cellSpacing="0" cellPadding="0" section_index="1">
							<tbody><tr><td class="dataLabelForWrite RL2" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(1).pySectionBody(1).pyTable.pyRows(1).pyCells(1)'}"><label for="pyOutputType">Output File Format</label></td><td class="dataValueWrite RV2" data-ui-meta="{'type':'Cell','clipboardPath':'.pyOutputType','className':'Embed-ScheduledTask-OutputProcessing-Reporting','pgRef':'.pySections(1).pySectionBody(1).pyTable.pyRows(1).pyCells(2)'}"> <script> 

function itemChanged (tagName) {
	if ("function" != typeof (promptSelectItemChangedHandler)) {
    	return false;
    }
return promptSelectItemChangedHandler (tagName);
}
var handlers = { "click":"clickHandler", "focus" : "focusHandler", "blur" : "blurHandler", "tap":"clickHandler" };
function fireEventHandler(target, type) {
	var handler = handlers[type] || "handler";
	pega.util.Event.addListener(target,type,pega.control.eventController[handler]);
	pega.util.Event.fireEvent(target,type);
	pega.util.Event.removeListener(target,type,pega.control.eventController[handler]);
}
function onClickSelectButton(eventEle) {
    if (eventEle) {
      var selElem = eventEle.previousSibling;
      var hiddenElem = selElem.previousSibling;
      if(pega && pega.util && pega.util.Dom) {
        selElem = pega.util.Dom.getPreviousSibling(eventEle);
        hiddenElem = pega.util.Dom.getPreviousSibling(selElem);
      }
      var value = selElem.options[selElem.selectedIndex].value;
      if(hiddenElem.value != value) {
        hiddenElem.value = value;
        fireEventHandler(hiddenElem, "change");
      }
    }
}
</script> <span nowrap="">   <script>if(window.name && window.name.indexOf("yuiIO")==0) {  window.onerror=function() {return true; }} ;try { if(typeof(pega)!= "undefined" && typeof(pega.u)!="undefined" && typeof(pega.u.d)!= "undefined" ){
 pega.u.d.attachOnload ($Pworkpage$ppyTaskOutputProcessing$ppyOutputType_announce, true); 
} else {
pega.util.Event.addListener(window, "load", $Pworkpage$ppyTaskOutputProcessing$ppyOutputType_announce); 
}}catch(e){}
function $Pworkpage$ppyTaskOutputProcessing$ppyOutputType_announce(){itemChanged("$Pworkpage$ppyTaskOutputProcessing$ppyOutputType");}</script><select id="pyOutputType" onchange="itemChanged('$Pworkpage$ppyTaskOutputProcessing$ppyOutputType')" title="" name="$Pworkpage$ppyTaskOutputProcessing$ppyOutputType" alt=""><option selected="" value="PDF">PDF</option><option value="EXCEL">Excel Workbook</option></select></span> </td><td class="dataSeparatorWrite RS2">&nbsp;</td><td class="dataLabelWrite RL2" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(1).pySectionBody(1).pyTable.pyRows(1).pyCells(4)'}"><label></label></td><td class="dataValueWrite RV2" data-ui-meta="{'type':'Cell','pgRef':'.pySections(1).pySectionBody(1).pyTable.pyRows(1).pyCells(5)'}"></td>
							</tr>
							</tbody></table><table cellSpacing="0" cellPadding="0" section_index="2">
							<tbody><tr><td style="width: 22px; height: 21px;" class="dataValueWrite" data-ui-meta="{'type':'Cell','subType':'Checkbox','clipboardPath':'.pyAllowSubscription','className':'Embed-ScheduledTask-OutputProcessing-Reporting','pgRef':'.pySections(2).pySectionBody(1).pyTable.pyRows(1).pyCells(1)'}" data-post=""><nobr>







	




  




	
	
		<input name="$Pworkpage$ppyTaskOutputProcessing$ppyAllowSubscription" value="false" type="hidden">
		<input id="pyAllowSubscription" class="checkbox" title="" onclick="handleClientEvent('POSTCELL', '','' , '-1', event)" name="$Pworkpage$ppyTaskOutputProcessing$ppyAllowSubscription" value="true" type="checkbox" validationType="true-false" PN=".pyAllowSubscription">
	

</nobr></td><td style="width: 277px; height: 21px;" class="dataLabelWrite" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(2).pySectionBody(1).pyTable.pyRows(1).pyCells(2)'}"><nobr><label>Enable authorized users to subscribe to task notifications</label></nobr></td><td style="width: 66px; height: 21px;" class="dataLabelWrite" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(2).pySectionBody(1).pyTable.pyRows(1).pyCells(3)'}"><nobr><label></label></nobr></td>
							</tr>
							<tr><td style="width: 22px; height: 22px;" class="dataValueWrite" data-ui-meta="{'type':'Cell','subType':'Checkbox','clipboardPath':'.pySendNotification','className':'Embed-ScheduledTask-OutputProcessing-Reporting','pgRef':'.pySections(2).pySectionBody(1).pyTable.pyRows(2).pyCells(1)'}" data-post=""><nobr>







	




  




	
	
		<input name="$Pworkpage$ppyTaskOutputProcessing$ppySendNotification" value="false" type="hidden">
		<input id="pySendNotification" class="checkbox" title="" onclick="handleClientEvent('POSTCELL', '','' , '-1', event)" name="$Pworkpage$ppyTaskOutputProcessing$ppySendNotification" value="true" CHECKED="true" type="checkbox" validationType="true-false" PN=".pySendNotification">
	

</nobr></td><td style="width: 277px; height: 22px;" class="dataLabelWrite" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(2).pySectionBody(1).pyTable.pyRows(2).pyCells(2)'}"><nobr><label>Send Notifications to the following users</label></nobr></td><td style="width: 66px; height: 22px;" class="dataLabelWrite" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(2).pySectionBody(1).pyTable.pyRows(2).pyCells(3)'}"><nobr><label></label></nobr></td>
							</tr>
							</tbody></table>  <div class="repeatContainer" section_index="3"> <table class=" repeatReadWrite repeatReadWriteRowColRepeat" summary="Subscribers" bReadOnly="false" PL_PROP=".pySubscribers"> <tbody><tr style="display: none;"><td style="width: 44px; height: 17px;" class="dataLabelRead" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(3).pySectionBody(1).pyTable.pyRows(1).pyCells(1)'}"></td><td style="width: 172px; height: 17px;" class="dataLabelRead" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(3).pySectionBody(1).pyTable.pyRows(1).pyCells(2)'}"></td><td style="width: 30px; height: 17px;" class="dataLabelRead" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(3).pySectionBody(1).pyTable.pyRows(1).pyCells(3)'}"></td> </tr>      <tr id=".pySubscribers1" onkeypress="if(event.keyCode==13 &amp;&amp;  event.srcElement.tagName!='A' &amp;&amp; event.srcElement.tagName!='BUTTON')AppendToList('.pySubscribers','Embed-ScheduledTask-OutputProcessing',this,'','AppendToValueList', event, 'true')" PL_INDEX="1" hPref="$Pworkpage$ppyTaskOutputProcessing$ppySubscribers$l1">     <td style="width: 44px; height: 23px;" class=" oddRow  " data-ui-meta="{'type':'Cell','pgRef':'.pySections(3).pySectionBody(1).pyTable.pyRows(2).pyCells(1)'}"></td><td style="width: 172px; height: 23px;" class=" oddRow  " data-ui-meta="{'type':'Cell','subType':'AutoComplete','clipboardPath':'.pySubscribers','className':'Embed-ScheduledTask-OutputProcessing-Reporting','pgRef':'.pySections(3).pySectionBody(1).pyTable.pyRows(2).pyCells(2)'}">

	
		  
		
		
		
		     <script type="text/javascript" src="webwb/pzpega_control_autocomplete_1176545502.js!pzpega_ui_autocomplete_11793636086.js!pzpega_ui_acdatasource_1101702572.js!!.js"></script>    <script type="text/javascript" src="webwb/pega_tools_cache_1230143793.js!!.js"></script>    
		<table cellSpacing="0" cellPadding="0">
			<tbody><tr>
				<td style="border: 0px currentColor; overflow: visible; padding-right: 0px; padding-left: 0px;">
					<input id="1400137870470" class="autocomplete_input" role="combobox" aria-owns="acresults-list" name="$Pworkpage$ppyTaskOutputProcessing$ppySubscribers$l1" value="SAE1Architect" size="30" type="text" data-ctl='["AutoComplete"]' autocomplete="off" data-config='[false,,2,["Activity","OperatorsAutoComplete","Data-Admin-Operator-ID","",false,"pyUserIdentifier","",false,true,false,false,"",{"pyUserName":true,"pyUserIdentifier":true},"500",{"pyUserName":"$Pworkpage$ppyTaskOutputProcessing$ppyUserName"},"","","","false","",""]]' aria-autocomplete="list">
				</td>
				<td style="border: 0px currentColor; overflow: visible; padding-right: 0px; padding-left: 0px; vertical-align: middle;">
					<div style="position: relative;">
						<div class="autocomplete_icon" title="Type at least 2 characters to see choices"></div>
					</div>
				</td>
			</tr>
		</tbody></table>
		<input id="$Pworkpage$ppyTaskOutputProcessing$ppyUserName" name="$Pworkpage$ppyTaskOutputProcessing$ppyUserName" value="" type="hidden">

	
	

</td><td style="width: 30px; height: 23px;" class=" oddRow" data-ui-meta="{'type':'Cell','subType':'ICON','pgRef':'.pySections(3).pySectionBody(1).pyTable.pyRows(2).pyCells(3)'}"><button id="RLDel" class="iconDelete" onmouseover="this.className='iconDelete_on'" title=" Delete this row 1" onkeypress="event.cancelBubble=true;" onmouseout="this.className='iconDelete'" onclick="javascript:setUserStart('RemoveFromList');RemoveFromList('.pySubscribers', this, '', 'RemoveFromPageList', event, 'true')" type="button" isIcon="true" alt=" Delete this row 1"></button>&nbsp;</td>  </tr>    <tr><td style="width: 44px; height: 21px;" class="  " data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(3).pySectionBody(1).pyTable.pyRows(3).pyCells(1)'}"></td><td style="width: 172px; height: 21px;" data-ui-meta="{'type':'Cell','subType':'ICON','pgRef':'.pySections(3).pySectionBody(1).pyTable.pyRows(3).pyCells(2)'}"><button id="RLAdd" class="iconInsert" onmouseover="this.className='iconInsert_on'" title="Add a row" onkeypress="event.cancelBubble=true;" onmouseout="this.className='iconInsert'" onclick="javascript:setUserStart('AppendToList');AppendToList('.pySubscribers', 'Embed-ScheduledTask-OutputProcessing','', '', 'AppendToValueList', event, 'true')" type="button" isIcon="true" alt="Add a row"></button>&nbsp;</td><td style="width: 30px; height: 21px;" class="  " data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(3).pySectionBody(1).pyTable.pyRows(3).pyCells(3)'}"></td> </tr> </tbody></table> </div> <div id="CT" height="0px" SHOW_WHEN=".pyAllowSubscription == 'true' || .pySendNotification == 'true'" SWP=".pySendNotification,.pyAllowSubscription"><table cellSpacing="0" cellPadding="0" section_index="4">
							<tbody><tr><td style="width: 373px; height: 29px;" class="dataValueWrite" colSpan="2" data-ui-meta="{'type':'Cell','subType':'RadioButtonsForSchedule','clipboardPath':'.pyStoreOutput','className':'Embed-ScheduledTask-OutputProcessing-Reporting','pgRef':'.pySections(4).pySectionBody(1).pyTable.pyRows(1).pyCells(1)'}"><nobr>



 







 














  







<table border="0"><tbody><tr><td><input style="vertical-align: middle;" id="$Pworkpage$ppyTaskOutputProcessing$ppyStoreOutputAttach output to notification" class="Radio" name="$Pworkpage$ppyTaskOutputProcessing$ppyStoreOutput" value="ATTACH" CHECKED="" type="radio"><label for="$Pworkpage$ppyTaskOutputProcessing$ppyStoreOutputAttach output to notification">Attach output to notification</label></td><td><input style="vertical-align: middle;" id="$Pworkpage$ppyTaskOutputProcessing$ppyStoreOutputEmbed link to output in notification" class="Radio" name="$Pworkpage$ppyTaskOutputProcessing$ppyStoreOutput" value="LINK" type="radio"><label for="$Pworkpage$ppyTaskOutputProcessing$ppyStoreOutputEmbed link to output in notification">Embed link to output in notification</label></td><td>&nbsp;</td></tr></tbody></table>






</nobr></td>
							</tr>
							<tr><td style="width: 373px; height: 31px;" class="dataValueWrite" colSpan="2" data-ui-meta="{'type':'Cell','subType':'pxButton','className':'Embed-ScheduledTask-OutputProcessing-Reporting','pgRef':'.pySections(4).pySectionBody(1).pyTable.pyRows(2).pyCells(1)'}"><nobr><span><button class="pzhc" title="Edit Email message" name="pyTaskOutputProcessing_workpage.pyTaskOutputProcessing_96" type="button" data-click='[["processAction", ["pyEmailParams","true",":event","","Rule-HTML-Section",""]]]' data-ctl=""><div class="pzbtn-rnd"><div class="pzbtn-lft" data-click=".."><div class="pzbtn-rgt" data-click="..."><div class="pzbtn-mid" data-click="...."><img class="pzbtn-i" alt="" src="webwb/zblankimage.gif">Configure Notification Message<img class="pzbtn-i" alt="" src="webwb/zblankimage.gif"></div></div></div></div></button></span></nobr></td>
							</tr>
							</tbody></table>
		</div></div><input id="EXPAND-INDICATOR" name="EXPANDEDFlowActionpyScheduleCreateBBB" value="" type="hidden"></div> </td> </tr> </tbody></table> </td></tr></tbody></table><div id="RULE_KEY" class="sectionDivStyle" node_name="DisplayRFHarnessErrors" objclass="Rule-HTML-Section" node_type="MAIN_RULE" version="1" data-ui-meta="{'type':'Section','ruleName':'DisplayRFHarnessErrors','insKey':'RULE-HTML-SECTION @BASECLASS DISPLAYRFHARNESSERRORS #20130924T185603.596 GMT'}" uniqueID="SID1400137870598" expandRL="false" BASE_REF="" NAME="BASE_REF" pyclassname="@baseclass"><table cellSpacing="0" cellPadding="0" data-ui-meta="{'type':'Layout','subType':'FREEFORM','pgRef':'.pySections(1)'}" section_index="1">
							<tbody><tr><td style="width: 126px; height: 21px; display: none;" class="dataLabelWrite" data-ui-meta="{'type':'Cell','subType':'Label','pgRef':'.pySections(1).pySectionBody(1).pyTable.pyRows(1).pyCells(1)'}"><nobr><label></label></nobr></td>
							</tr>
							</tbody></table></div> </div>  <span style="display: none;" id="pzFlowActionUITypeRef" uiref="pyScheduleCreate" uitype="Rule-HTML-Section"></span> </span>  <!-- When there is an interest page with a dot, show HTML for that embedded page -->  <!-- When there is an interest page with no dot, show HTML for that page -->       </div> </td></tr></tbody></table>       </div>  </td> </tr> </tbody></table> </div>     </div> <style id="fixedBBStyles">div#PEGA_HARNESS{height:100%;padding-bottom:45px}div#PEGA_HARNESS form {height:100%;}div#HARNESS_BUTTONS{position:absolute;bottom:0}DIV.harnessContent{overflow:auto;height:100%;width:100%}BODY.harnessBody{overflow:hidden}</style> <div style="height: 45px;" id="HARNESS_BUTTONS" class="buttonTableBoxStyle"> <table cellSpacing="0" cellPadding="0" width="100%"> <tbody><tr>  <td class="tdLeftStyle" width="33%" noWrap="nowrap">  </td>  <td width="34%" noWrap="nowrap" align="center">  <table class="buttonMainTable" border="0" cellSpacing="0" cellPadding="0"> <tbody><tr> <td class="buttonTdLeft" onclick="if(pega.u.d) pega.u.d.fireButtonClick(this.parentNode);"><div class="buttonLeftContent"><div class="buttonLeftContentInner">&nbsp;</div></div></td> <td class="buttonTdMiddle"> <button class="buttonTdButton" title="Complete this assignment" onclick="setUserStart('FINISHASSIGNMENT');doFormSubmit('pyActivity=FinishAssignment',this,'Submitting...',event)" type="button" alt="Complete this assignment" BUTTONTYPE="SUBMIT" PEGA_VERSION="HTMLPROPERTY"> Submit</button> </td> <td class="buttonTdRight" onclick="if(pega.u.d) pega.u.d.fireButtonClick(this.parentNode);"><div class="buttonRightContent"><div class="buttonRightContentInner">&nbsp;</div></div></td> </tr> </tbody></table>&nbsp; <table class="buttonMainTable" border="0" cellSpacing="0" cellPadding="0"> <tbody><tr> <td class="buttonTdLeft" onclick="if(pega.u.d) pega.u.d.fireButtonClick(this.parentNode);"><div class="buttonLeftContent"><div class="buttonLeftContentInner">&nbsp;</div></div></td> <td class="buttonTdMiddle"> <button class="buttonTdButton" title="Close this item" onclick="setUserStart('CANCEL');doClose(event)" type="button" alt="Close this item" PEGA_VERSION="HTMLPROPERTY"> Cancel</button> </td> <td class="buttonTdRight" onclick="if(pega.u.d) pega.u.d.fireButtonClick(this.parentNode);"><div class="buttonRightContent"><div class="buttonRightContentInner">&nbsp;</div></div></td> </tr> </tbody></table>&nbsp;   <table class="buttonMainTable" border="0" cellSpacing="0" cellPadding="0"> <tbody><tr> <td class="buttonTdLeft" onclick="if(pega.u.d) pega.u.d.fireButtonClick(this.parentNode);"><div class="buttonLeftContent"><div class="buttonLeftContentInner">&nbsp;</div></div></td> <td class="buttonTdMiddle"> <button class="buttonTdButton" title="Delete the Scheduled Task" onclick="setUserStart('doFormSubmit');doFormSubmit('pyActivity=pyRemoveTaskWrapper&amp;pzPrimaryPageName=workpage',this,'Delete',event)" type="button" alt="Delete the Scheduled Task" PEGA_VERSION="HTMLPROPERTY"> Delete</button> </td> <td class="buttonTdRight" onclick="if(pega.u.d) pega.u.d.fireButtonClick(this.parentNode);"><div class="buttonRightContent"><div class="buttonRightContentInner">&nbsp;</div></div></td> </tr> </tbody></table>&nbsp;  </td> <td class="tdRightStyle" width="33%" noWrap="nowrap"> </td> </tr> </tbody></table> </div> <div style="display: none;"><input type="text"></div> </form> </div> <script type="javascript"> pega.u.d.documentTitle = ''; pega.u.d.documentTooltip = ''; </script>    <script type="text/javascript" src="documentinfo_11905460907!!.js"></script>  <div style="display: none;" id="PegaOnlyOnce"> <script>    var oWin = null; if(typeof(showNewAlerts)=="function") showNewAlerts(0);    try { var oNewOOnames = null; oNewOOnames = {'CompositeAPIInclude':'CompositeAPIInclude','DesktopWrapperBundleInclude':'DesktopWrapperBundleInclude','DesktopWrapperInclude':'DesktopWrapperInclude','EvalDOMScripts_Include':'EvalDOMScripts_Include','ListViewIncludes':'ListViewIncludes','NewActionSection':'NewActionSection','PegaToolsCacheInclude':'PegaToolsCacheInclude','TextArea_Includes':'TextArea_Includes','documentInfo_bundle':'documentInfo_bundle','pyWorkFormStandard':'pyWorkFormStandard','pzAutoComplete_Variables':'pzAutoComplete_Variables','pzCalendarPopupScripts':'pzCalendarPopupScripts','pzDatePickerAdvancedIncludes':'pzDatePickerAdvancedIncludes','pzTextInput':'pzTextInput','xmlDocumentInclude':'xmlDocumentInclude'}; if (!pega.ui.onlyOnce) { pega.ui.onlyOnce = new pega.ui.OnlyOnceSingleton(); } if(oNewOOnames != null) { pega.ui.onlyOnce._mergeNewNames(oNewOOnames); } } catch(e) {} </script>  </div>                <div style="display: none;" id="primaryHighlight0" class="primaryHighlightTop" isInspectorElement="true"></div><div style="display: none;" id="primaryHighlight1" class="primaryHighlightBottom" isInspectorElement="true"></div><div style="display: none;" id="primaryHighlight2" class="primaryHighlightLeft" isInspectorElement="true"></div><div style="display: none;" id="primaryHighlight3" class="primaryHighlightRight" isInspectorElement="true"></div><div style="display: none;" id="secondaryHighlight0" class="secondaryHighlightTop" isInspectorElement="true"></div><div style="display: none;" id="secondaryHighlight1" class="secondaryHighlightBottom" isInspectorElement="true"></div><div style="display: none;" id="secondaryHighlight2" class="secondaryHighlightLeft" isInspectorElement="true"></div><div style="display: none;" id="secondaryHighlight3" class="secondaryHighlightRight" isInspectorElement="true"></div><div style="display: none; visibility: hidden;" class="inspectorIdPanel" isInspectorElement="true"></div><div style="left: 0px; top: 0px; width: 392px; height: 162px; visibility: hidden;" id="infoPanelElem" class="infoElem"><div id="infoSummaryElem" class="infoSummaryElem"></div><div id="breadCrumbHeader" class="breadCrumbHeader"></div><div id="breadCrumb" class="breadCrumb"></div><div id="keepRegion"></div><div id="inspectorArrow" class="arrow"></div></div><div id="js-toggle-runtime-editor" isInspectorElement="true"><div><img class="pzbtn-img" alt="" src="webwb/pz-tree-icon.png"> Dom Tree </div></div></body></html>